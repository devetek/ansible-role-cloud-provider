---
- name: Init Compute Engine Output
  ansible.builtin.set_fact:
    output_compute_instance: null
  when: with_output is defined and with_output and output_compute_instance is not defined

- name: Create a Instance (Compute Engine)
  google.cloud.gcp_compute_instance:
    name: "{{ cloud_provider_resource_detail.compute_instance.name }}"
    zone: "{{ cloud_provider_resource_detail.compute_instance.zone }}"
    machine_type: "{{ cloud_provider_resource_detail.compute_instance.machine_type | default('n1-standard-1') }}"
    tags: "{{ cloud_provider_resource_detail.compute_instance.tags | default(omit) }}"
    scopes: "{{ cloud_provider_resource_detail.compute_instance.scopes | default(omit) }}"
    scheduling: "{{ cloud_provider_resource_detail.compute_instance.scheduling | default(omit) }}"
    can_ip_forward: "{{ cloud_provider_resource_detail.compute_instance.can_ip_forward | default(omit) }}"
    min_cpu_platform: "{{ cloud_provider_resource_detail.compute_instance.min_cpu_platform | default(omit) }}"
    confidential_instance_config: "{{ cloud_provider_resource_detail.compute_instance.confidential_instance_config | default(omit) }}"
    disks: "{{ cloud_provider_resource_detail.compute_instance.disks }}"
    metadata: "{{ cloud_provider_resource_detail.compute_instance.metadata | default(omit) }}"
    labels: "{{ cloud_provider_resource_detail.compute_instance.labels | default(omit) }}"
    network_interfaces: "{{ cloud_provider_resource_detail.compute_instance.network_interfaces }}"
    shielded_instance_config: "{{ cloud_provider_resource_detail.compute_instance.shielded_instance_config | default(omit) }}"
    service_accounts: "{{ cloud_provider_resource_detail.compute_instance.service_accounts | default(omit) }}"
    project: "{{ cloud_provider_auth.project_id }}"
    auth_kind: "{{ cloud_provider_auth.auth_kind }}"
    service_account_email: "{{ cloud_provider_auth.service_account_email | default(omit) }}"
    service_account_file: "{{ cloud_provider_auth.service_acount_token }}"
    state: "present"
  register: compute_instance_result
  
# set_fact to print output globally
- name: Set Compute Engine Output
  set_fact:
    output_compute_instance: "{{ output_compute_instance | combine({ cloud_provider_resource_detail.compute_instance.name : compute_instance_result }, recursive=True) }}"
  when: with_output is defined and with_output