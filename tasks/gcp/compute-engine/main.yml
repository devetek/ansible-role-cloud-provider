---

- name: Get Info on a Disk
  google.cloud.gcp_compute_disk_info:
    zone: "{{ cloud_provider_resource_detail.zone }}"
    filters:
    - name = {{ cloud_provider_resource_detail.disk_name }}
    project: "{{ cloud_provider_auth.project_id }}"
    auth_kind: "{{ cloud_provider_auth.auth_kind }}"
    service_account_file: "{{ cloud_provider_auth.service_acount_token }}"
  register: disk


- name: Get Info on a Network
  google.cloud.gcp_compute_network_info:
    filters:
    - name = {{ cloud_provider_resource_detail.compute_network_name }}
    project: "{{ cloud_provider_auth.project_id }}"
    auth_kind: "{{ cloud_provider_auth.auth_kind }}"
    service_account_file: "{{ cloud_provider_auth.service_acount_token }}"
  register: network


- name: Get Info on a Subnetwork
  google.cloud.gcp_compute_subnetwork_info:
    region: "{{ cloud_provider_resource_detail.region }}"
    filters:
    - name = {{ cloud_provider_resource_detail.compute_subnetwork_name }}
    project: "{{ cloud_provider_auth.project_id }}"
    auth_kind: "{{ cloud_provider_auth.auth_kind }}"
    service_account_file: "{{ cloud_provider_auth.service_acount_token }}"
  register: subnet

- name: get info on an address
  gcp_compute_address_info:
    region: "{{ cloud_provider_resource_detail.region }}"
    filters:
    - name = {{ cloud_provider_resource_detail.compute_address_name }}
    project: "{{ cloud_provider_auth.project_id }}"
    auth_kind: "{{ cloud_provider_auth.auth_kind }}"
    service_account_file: "{{ cloud_provider_auth.service_acount_token }}"
  register: address

- name: Create a Instance (Compute Engine)
  google.cloud.gcp_compute_instance:
    name: "{{ cloud_provider_resource_detail.compute_instance_name }}"
    machine_type: "{{ cloud_provider_resource_detail.machine_type }}"
    disks:
    - auto_delete: true
      boot: 'true'
      source: "{{ disk.resources[0] }}"
    - auto_delete: true
      interface: NVME
      type: SCRATCH
      initialize_params:
        disk_type: local-ssd
    # TODO: Add meta for complete cloud integration
    # metadata:
    #   startup-script-url: gs:://graphite-playground/bootstrap.sh
    #   cost-center: '123456789'
    labels:
      environment: "{{ cloud_provider_resource_detail.environment }}"
    network_interfaces:
    - network: "{{ network.resources[0] }}"
      subnetwork: "{{ subnet.resources[0] }}"
      access_configs:
      - name: External NAT
        nat_ip: "{{ address.resources[0] }}"
        type: ONE_TO_ONE_NAT
    zone: "{{ cloud_provider_resource_detail.zone }}"
    project: "{{ cloud_provider_auth.project_id }}"
    auth_kind: "{{ cloud_provider_auth.auth_kind }}"
    service_account_file: "{{ cloud_provider_auth.service_acount_token }}"
    state: "{{ cloud_provider_resource_detail.state | default('present') }}"