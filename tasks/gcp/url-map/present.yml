---
- name: Init Backend Bucket Output
  ansible.builtin.set_fact:
    output_url_map: null
  when: with_output is defined and with_output and output_url_map is not defined

- name: Create a URL Map
  google.cloud.gcp_compute_url_map:
    name: "{{ cloud_provider_resource_detail.url_map.name }}"
    description: "{{ cloud_provider_resource_detail.url_map.description | default(omit) }}"
    env_type: "{{ cloud_provider_resource_detail.url_map.env_type | default(omit) }}"
    fingerprint: "{{ cloud_provider_resource_detail.url_map.fingerprint | default(omit) }}"
    default_service: "{{ cloud_provider_resource_detail.url_map.default_service | default(omit) }}"
    default_url_redirect: "{{ cloud_provider_resource_detail.url_map.default_url_redirect | default(omit) }}"
    host_rules: "{{ cloud_provider_resource_detail.url_map.host_rules | default(omit) }}"
    header_action: "{{ cloud_provider_resource_detail.url_map.header_action | default(omit) }}"
    path_matchers: "{{ cloud_provider_resource_detail.url_map.path_matchers | default(omit) }}"
    path_rules: "{{ cloud_provider_resource_detail.url_map.path_rules | default(omit) }}"
    project: "{{ cloud_provider_auth.project_id }}"
    auth_kind: "{{ cloud_provider_auth.auth_kind }}"
    service_account_file: "{{ cloud_provider_auth.service_acount_token }}"
    state: present
  register: url_map_result

# set_fact to print output globally
- name: Set Backend Bucket Output
  set_fact:
    output_url_map: "{{ output_url_map | combine({ cloud_provider_resource_detail.url_map.name : url_map_result }, recursive=True) }}"
  when: with_output is defined and with_output

# Print variable output_url_map
- name: Print output_url_map
  ansible.builtin.debug:
    msg: "{{ output_url_map }}"
  when: with_output is defined and with_output